/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: components/chromecast_controller/chromecast_protobuf/logging.proto */

#ifndef PROTOBUF_C_components_2fchromecast_5fcontroller_2fchromecast_5fprotobuf_2flogging_2eproto__INCLUDED
#define PROTOBUF_C_components_2fchromecast_5fcontroller_2fchromecast_5fprotobuf_2flogging_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Extensions__Api__CastChannel__Proto__SocketEvent Extensions__Api__CastChannel__Proto__SocketEvent;
typedef struct _Extensions__Api__CastChannel__Proto__AggregatedSocketEvent Extensions__Api__CastChannel__Proto__AggregatedSocketEvent;
typedef struct _Extensions__Api__CastChannel__Proto__Log Extensions__Api__CastChannel__Proto__Log;


/* --- enums --- */

typedef enum _Extensions__Api__CastChannel__Proto__EventType {
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__EVENT_TYPE_UNKNOWN = 0,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__CAST_SOCKET_CREATED = 1,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__READY_STATE_CHANGED = 2,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__CONNECTION_STATE_CHANGED = 3,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__READ_STATE_CHANGED = 4,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__WRITE_STATE_CHANGED = 5,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__ERROR_STATE_CHANGED = 6,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__CONNECT_FAILED = 7,
  /*
   * Logged with RV.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__TCP_SOCKET_CONNECT = 8,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__TCP_SOCKET_SET_KEEP_ALIVE = 9,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SSL_CERT_WHITELISTED = 10,
  /*
   * Logged with RV.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SSL_SOCKET_CONNECT = 11,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SSL_INFO_OBTAINED = 12,
  /*
   * Logged with RV.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__DER_ENCODED_CERT_OBTAIN = 13,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__RECEIVED_CHALLENGE_REPLY = 14,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__AUTH_CHALLENGE_REPLY = 15,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__CONNECT_TIMED_OUT = 16,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SEND_MESSAGE_FAILED = 17,
  /*
   * Message
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__MESSAGE_ENQUEUED = 18,
  /*
   * Logged with RV.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SOCKET_WRITE = 19,
  /*
   * Message
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__MESSAGE_WRITTEN = 20,
  /*
   * Logged with RV.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SOCKET_READ = 21,
  /*
   * Message
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__MESSAGE_READ = 22,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SOCKET_CLOSED = 25,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SSL_CERT_EXCESSIVE_LIFETIME = 26,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__CHANNEL_POLICY_ENFORCED = 27,
  /*
   * Logged with RV.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__TCP_SOCKET_CONNECT_COMPLETE = 28,
  /*
   * Logged with RV.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SSL_SOCKET_CONNECT_COMPLETE = 29,
  /*
   * Logged with RV.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SSL_SOCKET_CONNECT_FAILED = 30,
  /*
   * Logged with RV.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__SEND_AUTH_CHALLENGE_FAILED = 31,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__AUTH_CHALLENGE_REPLY_INVALID = 32,
  /*
   * Logged with RV.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__PING_WRITE_ERROR = 33
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE)
} Extensions__Api__CastChannel__Proto__EventType;
typedef enum _Extensions__Api__CastChannel__Proto__ChannelAuth {
  /*
   * SSL over TCP.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHANNEL_AUTH__SSL = 1,
  /*
   * SSL over TCP with challenge and receiver signature verification.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHANNEL_AUTH__SSL_VERIFIED = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXTENSIONS__API__CAST_CHANNEL__PROTO__CHANNEL_AUTH)
} Extensions__Api__CastChannel__Proto__ChannelAuth;
typedef enum _Extensions__Api__CastChannel__Proto__ReadyState {
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READY_STATE__READY_STATE_NONE = 1,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READY_STATE__READY_STATE_CONNECTING = 2,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READY_STATE__READY_STATE_OPEN = 3,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READY_STATE__READY_STATE_CLOSING = 4,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READY_STATE__READY_STATE_CLOSED = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXTENSIONS__API__CAST_CHANNEL__PROTO__READY_STATE)
} Extensions__Api__CastChannel__Proto__ReadyState;
typedef enum _Extensions__Api__CastChannel__Proto__ConnectionState {
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_UNKNOWN = 1,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_TCP_CONNECT = 2,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_TCP_CONNECT_COMPLETE = 3,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_SSL_CONNECT = 4,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_SSL_CONNECT_COMPLETE = 5,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_AUTH_CHALLENGE_SEND = 6,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_AUTH_CHALLENGE_SEND_COMPLETE = 7,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_AUTH_CHALLENGE_REPLY_COMPLETE = 8,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_START_CONNECT = 9,
  /*
   * Terminal states follow.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_FINISHED = 100,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_ERROR = 101,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_TIMEOUT = 102
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE)
} Extensions__Api__CastChannel__Proto__ConnectionState;
typedef enum _Extensions__Api__CastChannel__Proto__ReadState {
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READ_STATE__READ_STATE_UNKNOWN = 1,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READ_STATE__READ_STATE_READ = 2,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READ_STATE__READ_STATE_READ_COMPLETE = 3,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READ_STATE__READ_STATE_DO_CALLBACK = 4,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READ_STATE__READ_STATE_HANDLE_ERROR = 5,
  /*
   * Terminal state.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__READ_STATE__READ_STATE_ERROR = 100
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXTENSIONS__API__CAST_CHANNEL__PROTO__READ_STATE)
} Extensions__Api__CastChannel__Proto__ReadState;
typedef enum _Extensions__Api__CastChannel__Proto__WriteState {
  EXTENSIONS__API__CAST_CHANNEL__PROTO__WRITE_STATE__WRITE_STATE_UNKNOWN = 1,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__WRITE_STATE__WRITE_STATE_WRITE = 2,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__WRITE_STATE__WRITE_STATE_WRITE_COMPLETE = 3,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__WRITE_STATE__WRITE_STATE_DO_CALLBACK = 4,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__WRITE_STATE__WRITE_STATE_HANDLE_ERROR = 5,
  /*
   * Terminal states follow.
   */
  EXTENSIONS__API__CAST_CHANNEL__PROTO__WRITE_STATE__WRITE_STATE_ERROR = 100,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__WRITE_STATE__WRITE_STATE_IDLE = 101
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXTENSIONS__API__CAST_CHANNEL__PROTO__WRITE_STATE)
} Extensions__Api__CastChannel__Proto__WriteState;
typedef enum _Extensions__Api__CastChannel__Proto__ErrorState {
  EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_NONE = 1,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_CHANNEL_NOT_OPEN = 2,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_AUTHENTICATION_ERROR = 3,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_CONNECT_ERROR = 4,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_SOCKET_ERROR = 5,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_TRANSPORT_ERROR = 6,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_INVALID_MESSAGE = 7,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_INVALID_CHANNEL_ID = 8,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_CONNECT_TIMEOUT = 9,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_UNKNOWN = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE)
} Extensions__Api__CastChannel__Proto__ErrorState;
typedef enum _Extensions__Api__CastChannel__Proto__ChallengeReplyErrorType {
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_NONE = 1,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_PEER_CERT_EMPTY = 2,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_WRONG_PAYLOAD_TYPE = 3,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_NO_PAYLOAD = 4,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_PAYLOAD_PARSING_FAILED = 5,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_MESSAGE_ERROR = 6,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_NO_RESPONSE = 7,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_FINGERPRINT_NOT_FOUND = 8,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_CERT_PARSING_FAILED = 9,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_CERT_NOT_SIGNED_BY_TRUSTED_CA = 10,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_CANNOT_EXTRACT_PUBLIC_KEY = 11,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_SIGNED_BLOBS_MISMATCH = 12,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_TLS_CERT_VALIDITY_PERIOD_TOO_LONG = 13,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_TLS_CERT_VALID_START_DATE_IN_FUTURE = 14,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_TLS_CERT_EXPIRED = 15,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_CRL_INVALID = 16,
  EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_CERT_REVOKED = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE)
} Extensions__Api__CastChannel__Proto__ChallengeReplyErrorType;

/* --- messages --- */

struct  _Extensions__Api__CastChannel__Proto__SocketEvent
{
  ProtobufCMessage base;
  /*
   * Required
   */
  protobuf_c_boolean has_type;
  Extensions__Api__CastChannel__Proto__EventType type;
  protobuf_c_boolean has_timestamp_micros;
  int64_t timestamp_micros;
  char *details;
  protobuf_c_boolean has_net_return_value;
  int32_t net_return_value;
  char *message_namespace;
  protobuf_c_boolean has_ready_state;
  Extensions__Api__CastChannel__Proto__ReadyState ready_state;
  protobuf_c_boolean has_connection_state;
  Extensions__Api__CastChannel__Proto__ConnectionState connection_state;
  protobuf_c_boolean has_read_state;
  Extensions__Api__CastChannel__Proto__ReadState read_state;
  protobuf_c_boolean has_write_state;
  Extensions__Api__CastChannel__Proto__WriteState write_state;
  protobuf_c_boolean has_error_state;
  Extensions__Api__CastChannel__Proto__ErrorState error_state;
  protobuf_c_boolean has_challenge_reply_error_type;
  Extensions__Api__CastChannel__Proto__ChallengeReplyErrorType challenge_reply_error_type;
  /*
   * No longer used.
   */
  protobuf_c_boolean has_nss_error_code;
  int32_t nss_error_code;
};
#define EXTENSIONS__API__CAST_CHANNEL__PROTO__SOCKET_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extensions__api__cast_channel__proto__socket_event__descriptor) \
    , 0, EXTENSIONS__API__CAST_CHANNEL__PROTO__EVENT_TYPE__EVENT_TYPE_UNKNOWN, 0, 0, NULL, 0, 0, NULL, 0, EXTENSIONS__API__CAST_CHANNEL__PROTO__READY_STATE__READY_STATE_NONE, 0, EXTENSIONS__API__CAST_CHANNEL__PROTO__CONNECTION_STATE__CONN_STATE_UNKNOWN, 0, EXTENSIONS__API__CAST_CHANNEL__PROTO__READ_STATE__READ_STATE_UNKNOWN, 0, EXTENSIONS__API__CAST_CHANNEL__PROTO__WRITE_STATE__WRITE_STATE_UNKNOWN, 0, EXTENSIONS__API__CAST_CHANNEL__PROTO__ERROR_STATE__CHANNEL_ERROR_NONE, 0, EXTENSIONS__API__CAST_CHANNEL__PROTO__CHALLENGE_REPLY_ERROR_TYPE__CHALLENGE_REPLY_ERROR_NONE, 0, 0 }


struct  _Extensions__Api__CastChannel__Proto__AggregatedSocketEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  int32_t id;
  protobuf_c_boolean has_endpoint_id;
  int32_t endpoint_id;
  protobuf_c_boolean has_channel_auth_type;
  Extensions__Api__CastChannel__Proto__ChannelAuth channel_auth_type;
  size_t n_socket_event;
  Extensions__Api__CastChannel__Proto__SocketEvent **socket_event;
  protobuf_c_boolean has_bytes_read;
  int64_t bytes_read;
  protobuf_c_boolean has_bytes_written;
  int64_t bytes_written;
};
#define EXTENSIONS__API__CAST_CHANNEL__PROTO__AGGREGATED_SOCKET_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extensions__api__cast_channel__proto__aggregated_socket_event__descriptor) \
    , 0, 0, 0, 0, 0, EXTENSIONS__API__CAST_CHANNEL__PROTO__CHANNEL_AUTH__SSL, 0,NULL, 0, 0, 0, 0 }


struct  _Extensions__Api__CastChannel__Proto__Log
{
  ProtobufCMessage base;
  /*
   * Each AggregatedSocketEvent represents events recorded for a socket.
   */
  size_t n_aggregated_socket_event;
  Extensions__Api__CastChannel__Proto__AggregatedSocketEvent **aggregated_socket_event;
  /*
   * Number of socket log entries evicted by the logger due to size constraints.
   */
  protobuf_c_boolean has_num_evicted_aggregated_socket_events;
  int32_t num_evicted_aggregated_socket_events;
  /*
   * Number of event log entries evicted by the logger due to size constraints.
   */
  protobuf_c_boolean has_num_evicted_socket_events;
  int32_t num_evicted_socket_events;
};
#define EXTENSIONS__API__CAST_CHANNEL__PROTO__LOG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&extensions__api__cast_channel__proto__log__descriptor) \
    , 0,NULL, 0, 0, 0, 0 }


/* Extensions__Api__CastChannel__Proto__SocketEvent methods */
void   extensions__api__cast_channel__proto__socket_event__init
                     (Extensions__Api__CastChannel__Proto__SocketEvent         *message);
size_t extensions__api__cast_channel__proto__socket_event__get_packed_size
                     (const Extensions__Api__CastChannel__Proto__SocketEvent   *message);
size_t extensions__api__cast_channel__proto__socket_event__pack
                     (const Extensions__Api__CastChannel__Proto__SocketEvent   *message,
                      uint8_t             *out);
size_t extensions__api__cast_channel__proto__socket_event__pack_to_buffer
                     (const Extensions__Api__CastChannel__Proto__SocketEvent   *message,
                      ProtobufCBuffer     *buffer);
Extensions__Api__CastChannel__Proto__SocketEvent *
       extensions__api__cast_channel__proto__socket_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   extensions__api__cast_channel__proto__socket_event__free_unpacked
                     (Extensions__Api__CastChannel__Proto__SocketEvent *message,
                      ProtobufCAllocator *allocator);
/* Extensions__Api__CastChannel__Proto__AggregatedSocketEvent methods */
void   extensions__api__cast_channel__proto__aggregated_socket_event__init
                     (Extensions__Api__CastChannel__Proto__AggregatedSocketEvent         *message);
size_t extensions__api__cast_channel__proto__aggregated_socket_event__get_packed_size
                     (const Extensions__Api__CastChannel__Proto__AggregatedSocketEvent   *message);
size_t extensions__api__cast_channel__proto__aggregated_socket_event__pack
                     (const Extensions__Api__CastChannel__Proto__AggregatedSocketEvent   *message,
                      uint8_t             *out);
size_t extensions__api__cast_channel__proto__aggregated_socket_event__pack_to_buffer
                     (const Extensions__Api__CastChannel__Proto__AggregatedSocketEvent   *message,
                      ProtobufCBuffer     *buffer);
Extensions__Api__CastChannel__Proto__AggregatedSocketEvent *
       extensions__api__cast_channel__proto__aggregated_socket_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   extensions__api__cast_channel__proto__aggregated_socket_event__free_unpacked
                     (Extensions__Api__CastChannel__Proto__AggregatedSocketEvent *message,
                      ProtobufCAllocator *allocator);
/* Extensions__Api__CastChannel__Proto__Log methods */
void   extensions__api__cast_channel__proto__log__init
                     (Extensions__Api__CastChannel__Proto__Log         *message);
size_t extensions__api__cast_channel__proto__log__get_packed_size
                     (const Extensions__Api__CastChannel__Proto__Log   *message);
size_t extensions__api__cast_channel__proto__log__pack
                     (const Extensions__Api__CastChannel__Proto__Log   *message,
                      uint8_t             *out);
size_t extensions__api__cast_channel__proto__log__pack_to_buffer
                     (const Extensions__Api__CastChannel__Proto__Log   *message,
                      ProtobufCBuffer     *buffer);
Extensions__Api__CastChannel__Proto__Log *
       extensions__api__cast_channel__proto__log__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   extensions__api__cast_channel__proto__log__free_unpacked
                     (Extensions__Api__CastChannel__Proto__Log *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Extensions__Api__CastChannel__Proto__SocketEvent_Closure)
                 (const Extensions__Api__CastChannel__Proto__SocketEvent *message,
                  void *closure_data);
typedef void (*Extensions__Api__CastChannel__Proto__AggregatedSocketEvent_Closure)
                 (const Extensions__Api__CastChannel__Proto__AggregatedSocketEvent *message,
                  void *closure_data);
typedef void (*Extensions__Api__CastChannel__Proto__Log_Closure)
                 (const Extensions__Api__CastChannel__Proto__Log *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    extensions__api__cast_channel__proto__event_type__descriptor;
extern const ProtobufCEnumDescriptor    extensions__api__cast_channel__proto__channel_auth__descriptor;
extern const ProtobufCEnumDescriptor    extensions__api__cast_channel__proto__ready_state__descriptor;
extern const ProtobufCEnumDescriptor    extensions__api__cast_channel__proto__connection_state__descriptor;
extern const ProtobufCEnumDescriptor    extensions__api__cast_channel__proto__read_state__descriptor;
extern const ProtobufCEnumDescriptor    extensions__api__cast_channel__proto__write_state__descriptor;
extern const ProtobufCEnumDescriptor    extensions__api__cast_channel__proto__error_state__descriptor;
extern const ProtobufCEnumDescriptor    extensions__api__cast_channel__proto__challenge_reply_error_type__descriptor;
extern const ProtobufCMessageDescriptor extensions__api__cast_channel__proto__socket_event__descriptor;
extern const ProtobufCMessageDescriptor extensions__api__cast_channel__proto__aggregated_socket_event__descriptor;
extern const ProtobufCMessageDescriptor extensions__api__cast_channel__proto__log__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_components_2fchromecast_5fcontroller_2fchromecast_5fprotobuf_2flogging_2eproto__INCLUDED */
